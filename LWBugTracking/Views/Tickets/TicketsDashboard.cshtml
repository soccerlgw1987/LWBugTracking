@using Microsoft.AspNet.Identity
@model LWBugTracking.Models.Ticket
@using LWBugTracking.Helper
@using LWBugTracking.Models
@using System.Web.Configuration;

<section role="main" class="content-body">
    <header class="page-header">
        <h2>Details</h2>

        <div class="right-wrapper pull-right">
            <ol class="breadcrumbs">
                <li>
                    <a href="@Url.Action("Index","Home")">
                        <i class="fa fa-home"></i>
                    </a>
                </li>
                <li><span>Dashboard</span></li>
                <li><span>Tickets</span></li>
                <li><span>Details</span></li>
            </ol>

            <a class="sidebar-right-toggle" data-open="sidebar-right"><i class="fa fa-chevron-left"></i></a>
        </div>
    </header>

    <!-- start: page -->
    <div class="row">
        <div class="col-md-12">
            <h2 class="name text-semibold" style="text-align:center">Ticket Name - @Model.Title</h2>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <section class="panel-group mb-xlg">
                <div class="widget-twitter-profile">
                    <div class="top-image">
                        <img src="~/img/widget-twitter-profile.jpg" alt=""> 
                        @if (Model.AssignedToUserId != null)
                        {
                            <h3 style="padding-left:20px" class="name text-semibold"> Assigned Developer - @Model.AssignedToUser.FirstName @Model.AssignedToUser.LastName</h3>
                        }
                        else
                        {
                            <h3 style="padding-left:20px" class="name text-semibold"> Assigned Developer - None</h3>
                        }
                        <h3 style="padding-left:20px" class="name text-semibold">Ticket Owner - @Model.OwnerUser.FirstName @Model.OwnerUser.LastName</h3>
                    </div>
                    <div class="profile-info">
                        <ul class="profile-stats">
                            <li>
                                <h5 class="stat text-uppercase">Staus</h5>
                                <h4 class="count">@Model.TicketStatus.Name</h4>
                            </li>
                            <li>
                                <h5 class="stat text-uppercase">Priority</h5>
                                <h4 class="count">@Model.TicketPriority.Name</h4>
                            </li>
                            <li>
                                <h5 class="stat text-uppercase">Type</h5>
                                <h4 class="count">@Model.TicketType.Name</h4>
                            </li>

                        </ul>
                    </div>
                    <div class="profile-quote">
                        <div class="quote-footer">
                            Latest Update:
                            @if (Model.Created > Model.Updated)
                            {
                                @Model.Updated.Value.ToString("MMMM dd, yyyy h:mm tt")
                            }
                            else
                            {
                                
                            }
                            <br />
                            Creation Date: @Model.Created.ToString("MMMM dd, yyyy h:mm tt")
                            <br />
                            <a href="@Url.Action("EditDash","Tickets",new { id = Model.Id })">Edit Ticket</a>
                        </div>
                    </div>
                </div>
            </section>
        
            <div class="toggle" data-plugin-toggle>
                <section class="toggle">
                    <label>Comments</label>
                    <div class="toggle-content">
                        @if (User.Identity.IsAuthenticated)
                        {
                            using (Html.BeginForm("CreateDash", "TicketComments", FormMethod.Post, new { @class = "form-horizontal" }))
                            {
                                @Html.AntiForgeryToken()
                                @Html.Hidden("TicketId", Model.Id)
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <section class="panel">
                                    <header class="panel-heading">
                                        <div class="panel-actions">
                                            <a href="#" class="fa fa-caret-down"></a>
                                        </div>
                                    </header>

                                    <div class="panel-body">

                                        <div class="row">
                                            <div class="col-lg-12">
                                                <textarea id="txtComment" name="CommentBody" class="form-control" rows="5" placeholder="Type your message"></textarea>
                                            </div>
                                        </div>
                                    </div>
                                    <footer class="panel-footer">
                                        <button @*id="btnComment"*@ class="btn btn-primary">Add Comment</button>
                                    </footer>

                                </section>
                            }
                        }
                        <table class="table table-striped table-no-more table-bordered  mb-none">
                            <thead>
                                <tr>
                                    <th style="width: 10%"><span class="text-normal text-sm">Name</span></th>
                                    <th style="width: 15%"><span class="text-normal text-sm">Date</span></th>
                                    <th><span class="text-normal text-sm">Message</span></th>
                                </tr>
                            </thead>
                            <tbody class="log-viewer">
                                @foreach (var comment in Model.TicketComments.OrderByDescending(a => a.Created))
                                {
                                    <tr>
                                        <td data-title="Type" class="pt-md pb-md">
                                            @comment.User.FirstName
                                        </td>
                                        <td data-title="Date" class="pt-md pb-md">
                                            @comment.Created.ToString("MM/dd/yyyy")
                                        </td>
                                        <td data-title="Message" class="pt-md pb-md">
                                            @comment.CommentBody
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </section>
                <section class="toggle">
                    <label>Notifications</label>
                    <div class="toggle-content">
                        @foreach (var notification in Model.TicketNotifications.OrderByDescending(a => a.Created))
                        {
                            <p><a>Sent to @notification.Recipient.FirstName @notification.Recipient.LastName on @notification.Created.ToString("M/dd/yyyy h:mm tt")</a></p>
                            <p>Message: @notification.NotificationBody</p>
                            <hr />
                        }
                    </div>
                </section>
                <section class="toggle">
                    <label>History</label>
                    <div class="toggle-content">
                        <div class="timeline">
                            <div class="tm-body">
                                <div class="tm-title">
                                    <h3 class="h5 text-uppercase">@DateTime.Now.ToString("MMMM dd, yyyy")</h3>
                                </div>
                                <ol class="tm-items">
                                    @foreach (var item in Model.TicketHistories.OrderByDescending(c => c.Changed))
                                    {
                                        if (item.OldValue != item.NewValue)
                                        {
                                            if (item.PropertyName == "AssignedToUserId")
                                            {
                                                if (item.OldValue == "e3212997-a371-4fe4-a15b-332aca39d797")
                                                {
                                                    <li>
                                                        <div class="tm-info">
                                                            <div class="tm-icon"><i class="fa fa-bell"></i></div>
                                                            <time class="tm-datetime" datetime="2013-11-19 18:13">
                                                                <div class="tm-datetime-date">@item.Changed.ToString("MMMM dd, yyyy")</div>
                                                                <div class="tm-datetime-time">@item.Changed.ToString("h:mm tt")</div>
                                                            </time>
                                                        </div>
                                                        <div class="tm-box appear-animation" data-appear-animation="fadeInRight" data-appear-animation-delay="250">

                                                            <p>
                                                                @LookupData.GetNameFromId(item.PropertyName, item.NewValue) is now assigned as the Developer
                                                                <br />
                                                                Changed by @item.User.FirstName @item.User.LastName
                                                            </p>

                                                        </div>
                                                    </li>
                                                }
                                                else
                                                {
                                                    <li>
                                                        <div class="tm-info">
                                                            <div class="tm-icon"><i class="fa fa-bell"></i></div>
                                                            <time class="tm-datetime" datetime="2013-11-19 18:13">
                                                                <div class="tm-datetime-date">@item.Changed.ToString("MMMM dd, yyyy")</div>
                                                                <div class="tm-datetime-time">@item.Changed.ToString("h:mm tt")</div>
                                                            </time>
                                                        </div>
                                                        <div class="tm-box appear-animation" data-appear-animation="fadeInRight" data-appear-animation-delay="250">

                                                            <p>
                                                                Assigned Developer changed from @LookupData.GetNameFromId(item.PropertyName, item.OldValue) to @LookupData.GetNameFromId(item.PropertyName, item.NewValue)
                                                                <br />
                                                                Changed by @item.User.FirstName @item.User.LastName
                                                            </p>

                                                        </div>
                                                    </li>
                                                }
                                            }
                                            else if (item.PropertyName == "TicketPriorityId")
                                            {
                                                <li>
                                                    <div class="tm-info">
                                                        <div class="tm-icon"><i class="fa fa-star"></i></div>
                                                        <time class="tm-datetime" datetime="2013-11-19 18:13">
                                                            <div class="tm-datetime-date">@item.Changed.ToString("MMMM dd, yyyy")</div>
                                                            <div class="tm-datetime-time">@item.Changed.ToString("h:mm tt")</div>
                                                        </time>
                                                    </div>
                                                    <div class="tm-box appear-animation" data-appear-animation="fadeInRight" data-appear-animation-delay="250">

                                                        <p>
                                                            Priority changed from @LookupData.GetNameFromId(item.PropertyName, item.OldValue) to @LookupData.GetNameFromId(item.PropertyName, item.NewValue)
                                                            <br />
                                                            Changed by @item.User.FirstName @item.User.LastName
                                                        </p>

                                                    </div>
                                                </li>
                                            }
                                            else if (item.PropertyName == "TicketStatusId")
                                            {
                                                <li>
                                                    <div class="tm-info">
                                                        <div class="tm-icon"><i class="fa fa-support"></i></div>
                                                        <time class="tm-datetime" datetime="2013-11-19 18:13">
                                                            <div class="tm-datetime-date">@item.Changed.ToString("MMMM dd, yyyy")</div>
                                                            <div class="tm-datetime-time">@item.Changed.ToString("h:mm tt")</div>
                                                        </time>
                                                    </div>
                                                    <div class="tm-box appear-animation" data-appear-animation="fadeInRight" data-appear-animation-delay="250">

                                                        <p>
                                                            Status changed from @LookupData.GetNameFromId(item.PropertyName, item.OldValue) to @LookupData.GetNameFromId(item.PropertyName, item.NewValue)
                                                            <br />
                                                            Changed by @item.User.FirstName @item.User.LastName
                                                        </p>

                                                    </div>
                                                </li>
                                            }
                                            else if (item.PropertyName == "TicketTypeId")
                                            {
                                                <li>
                                                    <div class="tm-info">
                                                        <div class="tm-icon"><i class="fa fa-file"></i></div>
                                                        <time class="tm-datetime" datetime="2013-11-19 18:13">
                                                            <div class="tm-datetime-date">@item.Changed.ToString("MMMM dd, yyyy")</div>
                                                            <div class="tm-datetime-time">@item.Changed.ToString("h:mm tt")</div>
                                                        </time>
                                                    </div>
                                                    <div class="tm-box appear-animation" data-appear-animation="fadeInRight" data-appear-animation-delay="250">

                                                        <p>
                                                            Type changed from @LookupData.GetNameFromId(item.PropertyName, item.OldValue) to @LookupData.GetNameFromId(item.PropertyName, item.NewValue)
                                                            <br />
                                                            Changed by @item.User.FirstName @item.User.LastName
                                                        </p>

                                                    </div>
                                                </li>
                                            }
                                            else if (item.PropertyName == "Title")
                                            {
                                                <li>
                                                    <div class="tm-info">
                                                        <div class="tm-icon"><i class="fa fa-briefcase"></i></div>
                                                        <time class="tm-datetime" datetime="2013-11-19 18:13">
                                                            <div class="tm-datetime-date">@item.Changed.ToString("MMMM dd, yyyy")</div>
                                                            <div class="tm-datetime-time">@item.Changed.ToString("h:mm tt")</div>
                                                        </time>
                                                    </div>
                                                    <div class="tm-box appear-animation" data-appear-animation="fadeInRight" data-appear-animation-delay="250">

                                                        <p>
                                                            Title changed from @item.OldValue to @item.NewValue
                                                            <br />
                                                            Changed by @item.User.FirstName @item.User.LastName
                                                        </p>

                                                    </div>
                                                </li>
                                            }
                                            else
                                            {
                                                <li>
                                                    <div class="tm-info">
                                                        <div class="tm-icon"><i class="fa fa-book"></i></div>
                                                        <time class="tm-datetime" datetime="2013-11-19 18:13">
                                                            <div class="tm-datetime-date">@item.Changed.ToString("MMMM dd, yyyy")</div>
                                                            <div class="tm-datetime-time">@item.Changed.ToString("h:mm tt")</div>
                                                        </time>
                                                    </div>
                                                    <div class="tm-box appear-animation" data-appear-animation="fadeInRight" data-appear-animation-delay="250">

                                                        <p>
                                                            Description changed from @item.OldValue to @item.NewValue
                                                            <br />
                                                            Changed by @item.User.FirstName @item.User.LastName
                                                        </p>

                                                    </div>
                                                </li>
                                            }

                                        }
                                    }
                                </ol>
                                <div class="tm-title">
                                    <h3 class="h5 text-uppercase">@Model.Created.ToString("MMMM dd, yyyy - h:mm tt")</h3>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
            </div>
        </div>

        <div class="col-md-6">
            <section class="panel">
                <header class="panel-heading">
                    <div class="panel-actions">
                        <a href="#" class="fa fa-caret-down"></a>
                    </div>

                    <h2 class="panel-title">Attachments</h2>
                </header>
                <div class="panel-body">
                    @using (Html.BeginForm("Create", "TicketAttachments", FormMethod.Post, new { enctype = "Multipart/form-data", @class = "dropzone dz-square", id = "dropzone-example" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.Hidden("TicketId", Model.Id)
                        <div class="form-group">
                            <div class="col-md-10" style="padding-left:85px">
                                @Html.Editor("AttachmentDescription", new { htmlAttributes = new { @class = "form-control", placeholder = "Add description BEFORE uploading image" } })
                            </div>
                        </div>
                    }
                    <br />
                    <div class="popup-gallery">
                        @{
                            var counter = 1;
                            var typeExt = "";
                        }


                        @foreach (var attachment in Model.TicketAttachments.OrderByDescending(a => a.Created))
                        {
                            foreach (var ext in WebConfigurationManager.AppSettings["validExtensions"].Split(','))
                            {
                                if (Path.GetExtension(attachment.FilePath).Contains(ext))
                                {
                                    typeExt = ext;

                                }
                                break;
                            }

                            if (Path.GetExtension(attachment.FilePath) == ".doc" ||
                                Path.GetExtension(attachment.FilePath) == ".docx" ||
                                Path.GetExtension(attachment.FilePath) == ".txt" ||
                                Path.GetExtension(attachment.FilePath) == ".xls" ||
                                Path.GetExtension(attachment.FilePath) == ".xlsx" ||
                                Path.GetExtension(attachment.FilePath) == ".DOC" ||
                                Path.GetExtension(attachment.FilePath) == ".DOCX" ||
                                Path.GetExtension(attachment.FilePath) == ".TXT" ||
                                Path.GetExtension(attachment.FilePath) == ".XLS" ||
                                Path.GetExtension(attachment.FilePath) == ".XLSX")
                            {
                                typeExt = "document";
                            }
                            else if (Path.GetExtension(attachment.FilePath) == ".pdf" || Path.GetExtension(attachment.FilePath) == ".PDF")
                            {
                                typeExt = "video";
                            }
                            else
                            {
                                typeExt = "image";
                            }


                            <div class="isotope-item @(typeExt) col-sm-6 col-md-4 col-lg-3">
                                <div class="thumbnail">
                                    <div class="thumb-preview">

                                        @if (typeExt == "document")
                                        {
                                            <a class="thumb-preview" href="~/img/WordDoc-pic.jpg">
                                                <img src="~/img/WordDoc-pic.jpg" class="img-responsive" alt="Project">
                                            </a>
                                        }
                                        else if (typeExt == "video")
                                        {
                                            <a class="thumb-preview" href="~/img/PDF-pic.png">
                                                <img src="~/img/PDF-pic.png" class="img-responsive" alt="Project">
                                            </a>
                                        }
                                        else
                                        {
                                            <a class="thumb-image" href="@attachment.FilePath">
                                                <img src="@attachment.FilePath" class="img-responsive" alt="Project">
                                            </a>
                                        }

                                        <div class="mg-thumb-options">
                                            <div class="mg-zoom"><i class="fa fa-search"></i></div>
                                            <div class="mg-toolbar">
                                                
                                                <div class="mg-group pull-right">
                                                    <div class="btn-group dropup">
                                                        <button class="dropdown-toggle mg-toggle" type="button" data-toggle="dropdown">
                                                            <i class="fa fa-caret-up"></i>
                                                        </button>
                                                        @*<button type="button" class="mb-xs mt-xs mr-xs btn btn-default dropdown-toggle" data-toggle="dropdown">Default <span class="caret"></span></button>*@
                                                        <ul style="position:sticky" class="dropdown-menu mg-menu" role="menu">
                                                            <li><a id="btnDownload" href="@attachment.FilePath" download><i class="fa fa-download"></i> Download</a></li>
                                                            @if (User.IsInRole("Admin") || User.IsInRole("Project Manager") || attachment.UserId == User.Identity.GetUserId())
                                                            {
                                                                using (Html.BeginForm("Delete", "TicketAttachments", FormMethod.Post, new { @class = "form-horizontal" }))
                                                                {
                                                                    @Html.AntiForgeryToken()
                                                                    @Html.Hidden("TicketId", attachment.Id)

                                                                    <li><button type="submit" class="btn btn-link"><i class="fa fa-trash-o"></i> Delete</button></li>

                                                                }
                                                            }
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="mg-description">
                                        <small class="pull-left text-muted">@attachment.Description</small>
                                        <small class="pull-right text-muted"> @attachment.Created.ToString("MM/dd/yyyy")</small>
                                    </div>
                                </div>
                            </div>
                            counter++;
                        }

                    </div>
                </div>
            </section>
        </div>
    </div>

    <!-- end: page -->

</section>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


